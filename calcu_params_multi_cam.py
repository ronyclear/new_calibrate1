#!/usr/bin/env python 
# -*- coding: utf-8 -*-
# @Time    : 2022/10/14 10:09
# @Author  : xinguoron
# @Site    : 
# @File    : calcu_params.py
# @Software: PyCharm
# @email   : 1401255365@qq.com

from sympy.solvers import solve
from sympy import Symbol
import numpy as np
import json
from gaussReprojection import LatLon2XY, XY2LatLon


def get_expression(params, x, y):
    '''获取表达式'''
    a, b, c, d, e, f, u, v = params
    ex_x = (a * x + b * y + e) / (1 + u * x + v * y)
    ex_y = (c * x + d * y + f) / (1 + u * x + v * y)
    return ex_x, ex_y


def get_params(cam1_pts, cam2_pts):
    a = Symbol("a")
    b = Symbol("b")
    c = Symbol("c")
    d = Symbol("d")
    e = Symbol("e")
    f = Symbol("f")
    u = Symbol("u")
    v = Symbol("v")

    a_ = Symbol("a_")
    b_ = Symbol("b_")
    c_ = Symbol("c_")
    d_ = Symbol("d_")
    e_ = Symbol("e_")
    f_ = Symbol("f_")
    u_ = Symbol("u_")
    v_ = Symbol("v_")

    au_ = Symbol("au_")
    bu_ = Symbol("bu_")
    av_ = Symbol("av_")
    bv_ = Symbol("bv_")
    eu_ = Symbol("eu_")
    ev_ = Symbol("ev_")

    ua_ = Symbol("ua_")
    ub_ = Symbol("ub_")
    va_ = Symbol("va_")
    vb_ = Symbol("vb_")
    ue_ = Symbol("ue_")
    ve_ = Symbol("ve_")

    expression = []
    mtxx = []
    for cam1_pt, cam2_pt in zip(cam1_pts, cam2_pts):
        x1 = cam1_pt[0]  # 相机
        y1 = cam1_pt[1]

        x2 = cam2_pt[0]  # 地面坐标
        y2 = cam2_pt[1]

        A = x1 * x2
        B = x1 * y2
        C = x2 * y1
        D = y1 * y2

        mtxx.append([x1, A, B, y1, C, D, 1, x2, y2, -x2, -y2, -1, -A, -B, -x1, -C, -D, -y1])
        expre_1 = x1 * a + A * au_ + B * av_ + y1 * b + C * bu_ + D * bv_ + e + x2 * eu_ + y2 * ev_ - (
                x2 * a_ + y2 * b_ + e_ + A * ua_ + B * ub_ + x1 * ue_ + C * va_ + D * vb_ + y1 * ve_)
        # expre_2 =

        expression.append(expre_1)
        # expression.append(ex_y)
    args = [a, b, e, au_, av_, bu_, bv_, eu_, ev_, a_, b_, e_, ua_, ub_, ue_, va_, vb_, ve_]
    print(expression)
    # res = solve(expression, args)

    return mtxx


cam1_list = [[3814.725806451612, 1949.689419354838], [3566.1580645161284, 1949.689419354838],
             [3433.203225806451, 1660.6571612903222], [2953.409677419354, 1955.4700645161283],
             [2693.2806451612896, 1967.031354838709], [2693.2806451612896, 1672.2184516129028],
             [2785.7709677419352, 1868.7603870967737], [3352.2741935483864, 1256.0119999999993],
             [2797.3322580645154, 1250.2313548387092], [2225.0483870967737, 1261.7926451612898],
             [1936.0161290322574, 1666.4378064516122], [1323.2677419354834, 660.6055483870964],
             [1174.165556711758, 389.0700969823099], [2313.9805827263262, 356.7981419354835],
             [1997.3049531737765, 359.5882355879289], [3720.187783558792, 557.6848849115502],
             [3461.5388761706554, 714.4182676378764], [3016.996774193548, 943.857161290322]]
cam2_list = [[1696.532258064517, 1972.8119999999994], [1424.8419354838716, 1961.2507096774186],
             [1621.383870967743, 1677.9990967741928], [800.532258064517, 1967.031354838709],
             [534.6225806451621, 1955.4700645161283], [852.5580645161299, 1666.4378064516122],
             [719.6032258064524, 1862.9797419354832], [1997.1258064516132, 1256.0119999999993],
             [1419.061290322581, 1256.0119999999993], [869.9000000000005, 1250.2313548387092],
             [124.19677419354866, 1649.0958709677411], [650.235483870968, 660.6055483870964],
             [848.5081165452661, 375.56642830384953], [1982.9539021852245, 346.91137981269446],
             [1667.7630593132162, 345.63061144640983], [3188.8664099895946, 542.8261036420392],
             [2753.0244120707603, 696.3476270551507], [1997.1258064516132, 949.6378064516125]]

params = get_params(cam1_list, cam2_list)
print('params:', params)

PARAMS = [
    [3814.725806451612, 6471805.386316339, 7525736.847677415, 1949.689419354838, 3307710.9931425606, 3846370.6827762555,
     1, 1696.532258064517, 1972.8119999999994, -1696.532258064517, -1972.8119999999994, -1, -6471805.386316339,
     -7525736.847677415, -3814.725806451612, -3307710.9931425606, -3846370.6827762555, -1949.689419354838],
    [3566.1580645161284, 5081211.558886577, 6994130.034854107, 1949.689419354838, 2777999.245865973, 3823829.75736023,
     1, 1424.8419354838716, 1961.2507096774186, -1424.8419354838716, -1961.2507096774186, -1, -5081211.558886577,
     -6994130.034854107, -3566.1580645161284, -2777999.245865973, -3823829.75736023, -1949.689419354838],
    [3433.203225806451, 5566540.336077006, 5760911.91194547, 1660.6571612903222, 2692562.736523206, 2786581.2166967555,
     1, 1621.383870967743, 1677.9990967741928, -1621.383870967743, -1677.9990967741928, -1, -5566540.336077006,
     -5760911.91194547, -3433.203225806451, -2692562.736523206, -2786581.2166967555, -1660.6571612903222],
    [2953.409677419354, 2364299.718054112, 5809449.439167947, 1955.4700645161283, 1565416.866324663, 3846470.9303516974,
     1, 800.532258064517, 1967.031354838709, -800.532258064517, -1967.031354838709, -1, -2364299.718054112,
     -5809449.439167947, -2953.409677419354, -1565416.866324663, -3846470.9303516974, -1955.4700645161283],
    [2693.2806451612896, 1439888.6489177956, 5266629.676953587, 1967.031354838709, 1051619.37913382, 3846470.9303516974,
     1, 534.6225806451621, 1955.4700645161283, -534.6225806451621, -1955.4700645161283, -1, -1439888.6489177956,
     -5266629.676953587, -2693.2806451612896, -1051619.37913382, -3846470.9303516974, -1967.031354838709],
    [2693.2806451612896, 2296178.1340374625, 4488184.690481163, 1672.2184516129028, 1425663.326555256,
     2786648.048413717, 1, 852.5580645161299, 1666.4378064516122, -852.5580645161299, -1666.4378064516122, -1,
     -2296178.1340374625, -4488184.690481163, -2693.2806451612896, -1425663.326555256, -2786648.048413717,
     -1672.2184516129028],
    [2785.7709677419352, 2004649.7747450594, 5189834.878575232, 1868.7603870967737, 1344766.002814153,
     3481462.743692801, 1, 719.6032258064524, 1862.9797419354832, -719.6032258064524, -1862.9797419354832, -1,
     -2004649.7747450594, -5189834.878575232, -2785.7709677419352, -1344766.002814153, -3481462.743692801,
     -1868.7603870967737],
    [3352.2741935483864, 6694913.302237253, 4210496.614387093, 1256.0119999999993, 2508413.978412902,
     1577566.1441439982, 1, 1997.1258064516132, 1256.0119999999993, -1997.1258064516132, -1256.0119999999993, -1,
     -6694913.302237253, -4210496.614387093, -3352.2741935483864, -2508413.978412902, -1577566.1441439982,
     -1256.0119999999993],
    [2797.3322580645154, 3969585.9235900105, 3513482.884116126, 1250.2313548387092, 1774154.9195991673,
     1570305.584453676, 1, 1419.061290322581, 1256.0119999999993, -1419.061290322581, -1256.0119999999993, -1,
     -3969585.9235900105, -3513482.884116126, -2797.3322580645154, -1774154.9195991673, -1570305.584453676,
     -1250.2313548387092],
    [2225.0483870967737, 1935569.5919354847, 2781825.259581684, 1261.7926451612898, 1097633.4220258067,
     1577532.728285518, 1, 869.9000000000005, 1250.2313548387092, -869.9000000000005, -1250.2313548387092, -1,
     -1935569.5919354847, -2781825.259581684, -2225.0483870967737, -1097633.4220258067, -1577532.728285518,
     -1261.7926451612898],
    [1936.0161290322574, 240446.95801248745, 3192676.2045140453, 1666.4378064516122, 206966.19995546344,
     2748115.7058438933, 1, 124.19677419354866, 1649.0958709677411, -124.19677419354866, -1649.0958709677411, -1,
     -240446.95801248745, -3192676.2045140453, -1936.0161290322574, -206966.19995546344, -2748115.7058438933,
     -1666.4378064516122],
    [1323.2677419354834, 860435.6404682623, 874158.0123242448, 660.6055483870964, 429549.1684033298, 436399.6905598164,
     1, 650.235483870968, 660.6055483870964, -650.235483870968, -660.6055483870964, -1, -860435.6404682623,
     -874158.0123242448, -1323.2677419354834, -429549.1684033298, -436399.6905598164, -660.6055483870964],
    [1174.165556711758, 996289.0050378176, 440977.164371636, 389.0700969823099, 330129.1351945438, 146121.66668347848,
     1, 848.5081165452661, 375.56642830384953, -848.5081165452661, -375.56642830384953, -1, -996289.0050378176,
     -440977.164371636, -1174.165556711758, -330129.1351945438, -146121.66668347848, -389.0700969823099],
    [2313.9805827263262, 4588516.826098008, 802746.1968133727, 356.7981419354835, 707514.2678434046, 123777.33573344418,
     1, 1982.9539021852245, 346.91137981269446, -1982.9539021852245, -346.91137981269446, -1, -4588516.826098008,
     -802746.1968133727, -2313.9805827263262, -707514.2678434046, -123777.33573344418, -356.7981419354835],
    [1997.3049531737765, 3331031.419086538, 690329.7322103954, 359.5882355879289, 599707.9758771659, 124284.70173519154,
     1, 1667.7630593132162, 345.63061144640983, -1667.7630593132162, -345.63061144640983, -1, -3331031.419086538,
     -690329.7322103954, -1997.3049531737765, -599707.9758771659, -124284.70173519154, -359.5882355879289],
    [3720.187783558792, 11863181.861844271, 2019415.039365933, 557.6848849115502, 1778382.5968533552,
     302725.91313659586, 1, 3188.8664099895946, 542.8261036420392, -3188.8664099895946, -542.8261036420392, -1,
     -11863181.861844271, -2019415.039365933, -3720.187783558792, -1778382.5968533552, -302725.91313659586,
     -557.6848849115502],
    [3461.5388761706554, 9529701.029429799, 2410434.382380589, 714.4182676378764, 1966810.9312363758, 497483.4653944868,
     1, 2753.0244120707603, 696.3476270551507, -2753.0244120707603, -696.3476270551507, -1, -9529701.029429799,
     -2410434.382380589, -3461.5388761706554, -1966810.9312363758, -497483.4653944868, -714.4182676378764],
    [3016.996774193548, 6025322.115723205, 2865054.1987167518, 943.857161290322, 1885001.4944170646, 896322.4442513871,
     1, 1997.1258064516132, 949.6378064516125, -1997.1258064516132, -949.6378064516125, -1, -6025322.115723205,
     -2865054.1987167518, -3016.996774193548, -1885001.4944170646, -896322.4442513871, -943.857161290322]]
# def run(cam1_list, cam2_list):
#     xy_arr_ = np.array(xy_list_)
#     minxy = xy_arr_.min(axis=0)
#     res_arr = xy_arr_ - xy_arr_.min(axis=0) + 20
#     xy_list = res_arr.tolist()
#     params = get_params(xy_list, px_list)
#
#     return params, minxy

# def calibrate_multi_cameras(camera_id_list, cali_data_list, crossId):
#     '''
#     :param camera_id_list: 相机的设备代码      cam1                cam2         ...
#     :param cali_data_list: 标定的数据，[[gps_list, px_list],[gps_list, px_list]]
#     :return: 将参数存为json文件
#     '''
#     total_cfg_list = {}
#     for cam_name, cali_data in zip(camera_id_list, cali_data_list):
#         params, minxy = run(cali_data[0], cali_data[1])
#         this_cam_param = {'a': params[0], 'b': params[1], 'c': params[2],
#                           'd': params[3], 'e': params[4], 'f': params[5],
#                           'u': params[6], 'v': params[7], 'minx': minxy[0], 'miny': minxy[1]}
#         total_cfg_list[cam_name] = this_cam_param
#     print(total_cfg_list)
#     with open(f'{crossId}_cfg.json', 'w') as f:
#         # total_cfg_list = json.dumps(total_cfg_list)
#         f.write(json.dumps(str(total_cfg_list)))


# camera_27
# px_list_ = [[2912.290322580644, 1900.492903225806], [674.0967741935474, 1781.267096774193],
#             [1499.5519250780433, 769.3265593132152], [2263.2788761706543, 763.3739224765866]]
# px_list_arr = np.array(px_list_) / 2
# px_list = px_list_arr.tolist()
# gps_list = [[121.40716774935402, 31.243501817722173], [121.40709446724117, 31.243437355976546],
#             [121.40660928911471, 31.243710721527442], [121.40665982850288, 31.243822932714274]]
#
# # camera_71
# gps_list71 = [[121.40697654944812, 31.243405513520074], [121.40709048195131, 31.243535306248955],
#               [121.40740208196833, 31.24315591586261], [121.4075919612984, 31.243228671367657]]
# px_list_71_ = [[2768.6509565598667, 977.9813626113493], [413.967741935483, 930.4283870967738],
#                [2318.89391259105, 477.5473639438087], [1477.1621227887604, 425.3019425078048]]
# px_chg_71 = np.array(px_list_71_) / 2
# px_list_71 = px_chg_71.tolist()
#
# camera_id_list = ['dev27', 'dev71']
# cali_data_list = [[gps_list, px_list], [gps_list71, px_list_71]]
# calibrate_multi_cameras(camera_id_list, cali_data_list, '31011600088')
# calibrate_multi_cameras
# params,minxy = run(gps_list, px_list)
# print(params,minxy)

#
# #求出的结果
# print(res)
# print(expression)
# # 测试结果是否正确
#
# a = res.get(a)
# b = res.get(b)
# c = res.get(c)
# d = res.get(d)
# e = res.get(e)
# f = res.get(f)
# u = res.get(u)
# v = res.get(v)
#
# print(a,b,c,d,e,f,u,v)
# print((23*a + 23*b + e)/(23*u + 23*v + 1) - 12)
# print((23*c + 23*d + f)/(23*u + 23*v + 1) - 12)
# print(10 * a + 6 * b + 5 * c + 2 * e)
# print(6 * a + 2 * b + 6 * c + 6 * e)
# print(13 * a + 11 * b + 9 * c + 2 * e)
# print(11*a+9*b+7*c+4*d+2*e)
# print(8 * a + 8 * b + 5 * c + 2 * d + e)
eqq = [
    3814.72580645161 * a - 1696.53225806452 * a_ + 6471805.38631634 * au_ + 7525736.84767742 * av_ + 1949.68941935484 * b - 1972.812 * b_ + 3307710.99314256 * bu_ + 3846370.68277626 * bv_ + e - e_ + 1696.53225806452 * eu_ + 1972.812 * ev_ - 6471805.38631634 * ua_ - 7525736.84767742 * ub_ - 3814.72580645161 * ue_ - 3307710.99314256 * va_ - 3846370.68277626 * vb_ - 1949.68941935484 * ve_,
    3566.15806451613 * a - 1424.84193548387 * a_ + 5081211.55888658 * au_ + 6994130.03485411 * av_ + 1949.68941935484 * b - 1961.25070967742 * b_ + 2777999.24586597 * bu_ + 3823829.75736023 * bv_ + e - e_ + 1424.84193548387 * eu_ + 1961.25070967742 * ev_ - 5081211.55888658 * ua_ - 6994130.03485411 * ub_ - 3566.15806451613 * ue_ - 2777999.24586597 * va_ - 3823829.75736023 * vb_ - 1949.68941935484 * ve_,
    3433.20322580645 * a - 1621.38387096774 * a_ + 5566540.33607701 * au_ + 5760911.91194547 * av_ + 1660.65716129032 * b - 1677.99909677419 * b_ + 2692562.73652321 * bu_ + 2786581.21669676 * bv_ + e - e_ + 1621.38387096774 * eu_ + 1677.99909677419 * ev_ - 5566540.33607701 * ua_ - 5760911.91194547 * ub_ - 3433.20322580645 * ue_ - 2692562.73652321 * va_ - 2786581.21669676 * vb_ - 1660.65716129032 * ve_,
    2953.40967741935 * a - 800.532258064517 * a_ + 2364299.71805411 * au_ + 5809449.43916795 * av_ + 1955.47006451613 * b - 1967.03135483871 * b_ + 1565416.86632466 * bu_ + 3846470.9303517 * bv_ + e - e_ + 800.532258064517 * eu_ + 1967.03135483871 * ev_ - 2364299.71805411 * ua_ - 5809449.43916795 * ub_ - 2953.40967741935 * ue_ - 1565416.86632466 * va_ - 3846470.9303517 * vb_ - 1955.47006451613 * ve_,
    2693.28064516129 * a - 534.622580645162 * a_ + 1439888.6489178 * au_ + 5266629.67695359 * av_ + 1967.03135483871 * b - 1955.47006451613 * b_ + 1051619.37913382 * bu_ + 3846470.9303517 * bv_ + e - e_ + 534.622580645162 * eu_ + 1955.47006451613 * ev_ - 1439888.6489178 * ua_ - 5266629.67695359 * ub_ - 2693.28064516129 * ue_ - 1051619.37913382 * va_ - 3846470.9303517 * vb_ - 1967.03135483871 * ve_,
    2693.28064516129 * a - 852.55806451613 * a_ + 2296178.13403746 * au_ + 4488184.69048116 * av_ + 1672.2184516129 * b - 1666.43780645161 * b_ + 1425663.32655526 * bu_ + 2786648.04841372 * bv_ + e - e_ + 852.55806451613 * eu_ + 1666.43780645161 * ev_ - 2296178.13403746 * ua_ - 4488184.69048116 * ub_ - 2693.28064516129 * ue_ - 1425663.32655526 * va_ - 2786648.04841372 * vb_ - 1672.2184516129 * ve_,
    2785.77096774194 * a - 719.603225806452 * a_ + 2004649.77474506 * au_ + 5189834.87857523 * av_ + 1868.76038709677 * b - 1862.97974193548 * b_ + 1344766.00281415 * bu_ + 3481462.7436928 * bv_ + e - e_ + 719.603225806452 * eu_ + 1862.97974193548 * ev_ - 2004649.77474506 * ua_ - 5189834.87857523 * ub_ - 2785.77096774194 * ue_ - 1344766.00281415 * va_ - 3481462.7436928 * vb_ - 1868.76038709677 * ve_,
    3352.27419354839 * a - 1997.12580645161 * a_ + 6694913.30223725 * au_ + 4210496.61438709 * av_ + 1256.012 * b - 1256.012 * b_ + 2508413.9784129 * bu_ + 1577566.144144 * bv_ + e - e_ + 1997.12580645161 * eu_ + 1256.012 * ev_ - 6694913.30223725 * ua_ - 4210496.61438709 * ub_ - 3352.27419354839 * ue_ - 2508413.9784129 * va_ - 1577566.144144 * vb_ - 1256.012 * ve_,
    2797.33225806452 * a - 1419.06129032258 * a_ + 3969585.92359001 * au_ + 3513482.88411613 * av_ + 1250.23135483871 * b - 1256.012 * b_ + 1774154.91959917 * bu_ + 1570305.58445368 * bv_ + e - e_ + 1419.06129032258 * eu_ + 1256.012 * ev_ - 3969585.92359001 * ua_ - 3513482.88411613 * ub_ - 2797.33225806452 * ue_ - 1774154.91959917 * va_ - 1570305.58445368 * vb_ - 1250.23135483871 * ve_,
    2225.04838709677 * a - 869.900000000001 * a_ + 1935569.59193548 * au_ + 2781825.25958168 * av_ + 1261.79264516129 * b - 1250.23135483871 * b_ + 1097633.42202581 * bu_ + 1577532.72828552 * bv_ + e - e_ + 869.900000000001 * eu_ + 1250.23135483871 * ev_ - 1935569.59193548 * ua_ - 2781825.25958168 * ub_ - 2225.04838709677 * ue_ - 1097633.42202581 * va_ - 1577532.72828552 * vb_ - 1261.79264516129 * ve_,
    1936.01612903226 * a - 124.196774193549 * a_ + 240446.958012487 * au_ + 3192676.20451405 * av_ + 1666.43780645161 * b - 1649.09587096774 * b_ + 206966.199955463 * bu_ + 2748115.70584389 * bv_ + e - e_ + 124.196774193549 * eu_ + 1649.09587096774 * ev_ - 240446.958012487 * ua_ - 3192676.20451405 * ub_ - 1936.01612903226 * ue_ - 206966.199955463 * va_ - 2748115.70584389 * vb_ - 1666.43780645161 * ve_,
    1323.26774193548 * a - 650.235483870968 * a_ + 860435.640468262 * au_ + 874158.012324245 * av_ + 660.605548387096 * b - 660.605548387096 * b_ + 429549.16840333 * bu_ + 436399.690559816 * bv_ + e - e_ + 650.235483870968 * eu_ + 660.605548387096 * ev_ - 860435.640468262 * ua_ - 874158.012324245 * ub_ - 1323.26774193548 * ue_ - 429549.16840333 * va_ - 436399.690559816 * vb_ - 660.605548387096 * ve_,
    1174.16555671176 * a - 848.508116545266 * a_ + 996289.005037818 * au_ + 440977.164371636 * av_ + 389.07009698231 * b - 375.56642830385 * b_ + 330129.135194544 * bu_ + 146121.666683478 * bv_ + e - e_ + 848.508116545266 * eu_ + 375.56642830385 * ev_ - 996289.005037818 * ua_ - 440977.164371636 * ub_ - 1174.16555671176 * ue_ - 330129.135194544 * va_ - 146121.666683478 * vb_ - 389.07009698231 * ve_,
    2313.98058272633 * a - 1982.95390218522 * a_ + 4588516.82609801 * au_ + 802746.196813373 * av_ + 356.798141935483 * b - 346.911379812694 * b_ + 707514.267843405 * bu_ + 123777.335733444 * bv_ + e - e_ + 1982.95390218522 * eu_ + 346.911379812694 * ev_ - 4588516.82609801 * ua_ - 802746.196813373 * ub_ - 2313.98058272633 * ue_ - 707514.267843405 * va_ - 123777.335733444 * vb_ - 356.798141935483 * ve_,
    1997.30495317378 * a - 1667.76305931322 * a_ + 3331031.41908654 * au_ + 690329.732210395 * av_ + 359.588235587929 * b - 345.63061144641 * b_ + 599707.975877166 * bu_ + 124284.701735192 * bv_ + e - e_ + 1667.76305931322 * eu_ + 345.63061144641 * ev_ - 3331031.41908654 * ua_ - 690329.732210395 * ub_ - 1997.30495317378 * ue_ - 599707.975877166 * va_ - 124284.701735192 * vb_ - 359.588235587929 * ve_,
    3720.18778355879 * a - 3188.86640998959 * a_ + 11863181.8618443 * au_ + 2019415.03936593 * av_ + 557.68488491155 * b - 542.826103642039 * b_ + 1778382.59685336 * bu_ + 302725.913136596 * bv_ + e - e_ + 3188.86640998959 * eu_ + 542.826103642039 * ev_ - 11863181.8618443 * ua_ - 2019415.03936593 * ub_ - 3720.18778355879 * ue_ - 1778382.59685336 * va_ - 302725.913136596 * vb_ - 557.68488491155 * ve_,
    3461.53887617066 * a - 2753.02441207076 * a_ + 9529701.0294298 * au_ + 2410434.38238059 * av_ + 714.418267637876 * b - 696.347627055151 * b_ + 1966810.93123638 * bu_ + 497483.465394487 * bv_ + e - e_ + 2753.02441207076 * eu_ + 696.347627055151 * ev_ - 9529701.0294298 * ua_ - 2410434.38238059 * ub_ - 3461.53887617066 * ue_ - 1966810.93123638 * va_ - 497483.465394487 * vb_ - 714.418267637876 * ve_,
    3016.99677419355 * a - 1997.12580645161 * a_ + 6025322.1157232 * au_ + 2865054.19871675 * av_ + 943.857161290322 * b - 949.637806451613 * b_ + 1885001.49441706 * bu_ + 896322.444251387 * bv_ + e - e_ + 1997.12580645161 * eu_ + 949.637806451613 * ev_ - 6025322.1157232 * ua_ - 2865054.19871675 * ub_ - 3016.99677419355 * ue_ - 1885001.49441706 * va_ - 896322.444251387 * vb_ - 943.857161290322 * ve_]
